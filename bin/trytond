#!/usr/bin/env python
# This file is part of Tryton.  The COPYRIGHT file at the top level of
# this repository contains the full copyright notices and license terms.
import sys
import os
import glob
import threading

from werkzeug.serving import run_simple

DIR = os.path.abspath(os.path.normpath(os.path.join(__file__,
    '..', '..', 'trytond')))
if os.path.isdir(DIR):
    sys.path.insert(0, os.path.dirname(DIR))

import trytond.commandline as commandline
from trytond.config import config, split_netloc

parser = commandline.get_parser_daemon()
options = parser.parse_args()
commandline.config_log(options)
config.update_etc(options.configfile)

# Import trytond things after it is configured
from trytond.wsgi import app
from trytond.pool import Pool
from trytond.modules import get_module_list, get_module_info

with commandline.pidfile(options):
    # Pool.{start,init} are async to avoid slowness on server start
    # fix #4287
    def init_pool_db():
        Pool.start()
        for name in options.database_names:
            Pool(name).init()
    threading.Thread(target=init_pool_db).start()
    hostname, port = split_netloc(config.get('web', 'listen'))
    static_files = {
        '/': config.get('web', 'root'),
        }
    # AKE: add bench web app
    bench = config.get('web', 'bench')
    if bench:
        static_files['/bench/'] = bench
    certificate = config.get('ssl', 'certificate')
    privatekey = config.get('ssl', 'privatekey')
    if certificate or privatekey:
        ssl_context = (certificate, privatekey)
    else:
        ssl_context = None
    extra_files = options.configfile
    for module in get_module_list():
        info = get_module_info(module)
        path = os.path.join(info['directory'], 'view', '*.xml')
        extra_files.extend(glob.glob(path))

    # AKE: handle term signals
    handler = commandline.generate_signal_handler(options.pidfile)
    commandline.handle_signals(handler)

    run_simple(hostname, port, app,
        threaded=True,
        extra_files=extra_files,
        static_files=static_files,
        ssl_context=ssl_context,
        use_reloader=options.dev)
